config:
  target: "{{ $processEnvironment.CLOUD_HOST }}"
  tls:
    rejectUnauthorized: false
    client:
      key: "./etc/certs/localhost-key.pem"
      cert: "./etc/certs/localhost.pem"
  processor: "../load-test-hook.js"
  phases:
    - name: "Warming up the application"
      duration: 5
      arrivalRate: 1
    - name: "Mild load on the application"
      duration: 10
      rampTo: 30
    - name: "Putting load on the application"
      duration: 180
      arrivalRate: 3
      maxVusers: 120
before:
  flow:
    - log: "로그인"
    - patch:
        url: "/user/login"
        auth:
          user: "{{ $processEnvironment.TEST_USER_ID }}"
          pass: "{{ $processEnvironment.TEST_PASSWORD }}"
        json:
          isAutoLogin: false
        afterResponse: "setCookieValue"        
scenarios:
  - name: "퀴즈"
    flow:
      # 카테고리별 검색어를 포함한 챕터수 조회 API
      - get:
          url: "/quiz/categories/chapter"
          afterResponse: "setQuizQueryString"
      # 카테고리별 활성화된 챕터 전체조회 API
      - get:
          url: "/history/categories/active-chapter"
          cookie:
            loginData: "{{ cookieValue }}"
      # 한 챕터의 질문-선택지 전체조회 API
      - get:
          url: "/quiz/chapter?categorySeq={{ categorySeq }}&chapterNum={{ chapterNum }}"
          afterResponse: "setUserOption"
      # 한 챕터의 선택기록 조회 API
      - get:
          url: "/history/chapter/user-option?categorySeq={{ categorySeq }}&chapterNum={{ chapterNum }}"
          cookie:
            loginData: "{{ cookieValue }}"
          afterResponse:
            - "isTooManyRequests"
            - "setStatusCode"
      # 한 챕터의 선택기록 생성 API
      - post:
          url: "/history/chapter/user-option?categorySeq={{ categorySeq }}&chapterNum={{ chapterNum }}"
          cookie:
            loginData: "{{ cookieValue }}"
          json:
            userOption: "{{ userOption }}"
          ifTrue: "statusCode == 400"
      # 한 챕터의 선택기록 수정 API
      - put:
          url: "/history/chapter/user-option?categorySeq={{ categorySeq }}&chapterNum={{ chapterNum }}"
          cookie:
            loginData: "{{ cookieValue }}"
          json:
            userOption: "{{ userOption }}"
          ifTrue: "statusCode == 200"
      # 한 챕터의 맞힌개수 조회 API
      - get:
          url: "/history/chapter/hit-count?categorySeq={{ categorySeq }}&chapterNum={{ chapterNum }}"
          cookie:
            loginData: "{{ cookieValue }}"
      # 한 카테고리의 활성화된 챕터개수 조회 API
      - get:
          url: "/history/category/active-chapter-count?categorySeq={{ categorySeq }}"
          cookie:
            loginData: "{{ cookieValue }}"
after:
  flow:
    - log: "로그아웃"
    - patch:
        url: "/user/logout"
        cookie:
          loginData: "{{ cookieValue }}"
